name: create_release_pull_request
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'SDK Version'     
        required: true
        default: '0.0.0'
jobs:
  tests:
    name: create_release_pull_request
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Select Xcode Version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    # Update new version
    - shell: bash
      env:
          GB_SDK_VERSION: ${{ github.event.inputs.version }}
      run:  |
          sh scripts/setup_version.sh -v "$GB_SDK_VERSION"
    
    - name: Git commit and push
      env:
          GB_SDK_VERSION: ${{ github.event.inputs.version }}
      run: |
          git branch releases/RELEASE-"$GB_SDK_VERSION"
          git checkout releases/RELEASE-"$GB_SDK_VERSION"
          git status
          git add GBSwiftLogger.podspec
          git add GBSwiftLogger.xcodeproj/project.pbxproj
          git add docs/
          git commit -m "Release v$GB_SDK_VERSION"
          git push --set-upstream origin releases/RELEASE-"$GB_SDK_VERSION"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3.10.1
      env:
        GB_SDK_VERSION: ${{ github.event.inputs.version }}
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        commit-message: Auto Pull Request
        title: "Release v$GB_SDK_VERSION"  
        body: Auto-created Pull Request
        branch: releases/RELEASE-${{ github.event.inputs.version }} # The branch where you commit
        base: main # Don't forget to specify the right base branch here
        delete-branch: true

